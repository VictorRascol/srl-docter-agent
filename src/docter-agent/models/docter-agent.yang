module docter-agent {

    yang-version "1";

    // namespace
    namespace "urn:srl_test/docter-agent";

    prefix "docter_agent";

    import srl_nokia-common {
      prefix srl_nokia-comm;
    }

    // Note that this module needs to be in the path for source-directories
    import srl_nokia-extensions {
      prefix srl_nokia-ext;
    }

    revision "2021-04-11" {
        description "Initial revision";
        reference "TBD";
    }

    grouping docter-agent-top {
        description "Top level grouping for docter agent sample app";

        container docter-agent {
            presence "presence container";
            srl_nokia-ext:stream-mode on_change;

            description "Top level enclosing container for auto config agent sample app
                         config and operational state data";

            // gNMI reporting to collectors
            container reports {
              srl_nokia-ext:delivery-node-override true;
              srl_nokia-ext:stream-mode on_change;
              config false;

              leaf last-updated {
                type srl_nokia-comm:date-and-time-delta;
              }

              leaf count {
                description "Number of events reported";
                type srl_nokia-comm:zero-based-counter64;
                default 0;
              }

              leaf filtered {
                description "Number of events suppressed by filter expression";
                type srl_nokia-comm:zero-based-counter64;
                default 0;
              }

              list events {
                key event;
                leaf event  { type string; }
                leaf name {
                  type string; // technically a leafref to obervations/name
                }
                leaf timestamp { type string; }
                leaf sample-period { type uint16; }
                leaf trigger { type string; }
                leaf-list values { type string; }

                container history {
                   description "History of trigger condition values";
                   key timestamp;
                   leaf timestamp {
                     description "gNMI timestamp received in update, in ns";
                     type uint64;
                   }
                   leaf value { type string; }
                }
              }
            }

            container monitor {
             leaf flaps-monitoring-period {
                description "Monitoring period in minutes, default 1 hour";
                type uint16;
                default 60;
             }

             leaf flaps-per-period-threshold {
                description "Number of BFD flaps per period still considered acceptable";
                type uint32;
                default 0;
             }
             leaf max-flaps-history {
                description "Maximum number of flaps to retain, 0 = infinite";
                type uint32;
                default 0;
             }
            }

            container intensive-care {
              list observe {
                key name;
                leaf name { type string; mandatory "true"; }
                list conditions {
                  key gnmi-path;
                  description "Set of conditions that must all be true for reporting";
                  min-elements 1;

                  leaf gnmi-path {
                    description "Path to local state variable to observe";
                    type string;
                    mandatory "true";
                  }
                  leaf update-path-match {
                    description "Regular expression to match updates, default empty (exact path match)";
                    type string;
                    default "";
                  }
                  leaf filter {
                    description "Optional filter expression, for example != 'established'";
                    type string;
                  }
                  leaf sample-period {
                    description "Monitoring interval in seconds, default 0=on change";
                    type uint16;
                    default 0;
                  }
                  leaf history-window {
                    description "Time limit on history items to keep, in seconds";
                    type uint16;
                  }
                  leaf history-items {
                    description "Limit on the number of history items to keep in history";
                    type uint16;
                  }
                  leaf aggregate {
                    description "Optional aggregate function to apply to values";
                    type enumeration {
                      enum average;
                      enum sum;
                      enum minimum;
                      enum maximum;
                      enum no;
                    }
                    default "no";
                  }
                }
                leaf-list report {
                  description "gNMI path of value to report when conditions are met";
                  type string;    // TODO pattern [label:] gnmi_path
                  min-elements 0; // Implicit report for condition path
                }

              } // end list observe
            } // end intensive-care


            // Info from state
            leaf total-bfd-flaps-last-period {
                srl_nokia-ext:delivery-node-override true;
                srl_nokia-ext:stream-mode on_change;
                type srl_nokia-comm:zero-based-counter64;

                config false;
            }
            leaf total-route-flaps-last-period {
                srl_nokia-ext:delivery-node-override true;
                srl_nokia-ext:stream-mode on_change;
                type srl_nokia-comm:zero-based-counter64;

                config false;
            }
            list peer {
                key peer-ip;
                config false;

                leaf peer-ip {
                  type string;
                }
                container bfd {
                 srl_nokia-ext:delivery-node-override true;
                 srl_nokia-ext:stream-mode on_change;
                 presence "State BFD operational parameters";

                 leaf status {
                  type string;
                  default "red";
                 }
                 leaf flaps-last-period {
                  srl_nokia-ext:delivery-node-override true;
                  srl_nokia-ext:stream-mode on_change;
                  type srl_nokia-comm:zero-based-counter64;
                 }
                 leaf flaps-history {
                  type string;
                 }
                 leaf last-flap-timestamp {
                   type srl_nokia-comm:date-and-time-delta;
                 }
                }
                container routes {
                 srl_nokia-ext:delivery-node-override true;
                 srl_nokia-ext:stream-mode on_change;
                 presence "State Routes operational parameters";

                 leaf status {
                  type string;
                 }
                 leaf flaps-last-period {
                  srl_nokia-ext:delivery-node-override true;
                  srl_nokia-ext:stream-mode on_change;
                  type srl_nokia-comm:zero-based-counter64;
                 }
                 leaf flaps-history {
                  type string;
                 }
                 leaf last-flap-timestamp {
                   type srl_nokia-comm:date-and-time-delta;
                 }
              }
            }
        }
    }

    // data definition statements
    uses docter-agent-top;
}
